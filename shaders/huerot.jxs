<jittershader name="huerot">
	<description>
	Performs hue rotation
	</description>

	<param name="hue" type="float" default="1." />
	<language name="glsl" version="2.1">
		<bind param="hue" program="fp" />
		<program name="vp" type="vertex" source="sh.passthrudim.vp.glsl" />
		<program name="fp" type="fragment">
<![CDATA[

		varying vec2 texcoord0;
		varying vec2 texdim0;
		uniform sampler2DRect tex0;
		
		const mat3 rgb2yiq = mat3(0.299, 0.587, 0.114, 0.595716, -0.274453, -0.321263, 0.211456, -0.522591, 0.311135);
		const mat3 yiq2rgb = mat3(1.0, 0.9563, 0.6210, 1.0, -0.2721, -0.6474, 1.0, -1.1070, 1.7046);
		uniform float hue;
		
		void main() {	
			vec3 yColor = rgb2yiq * texture2DRect(tex0, texcoord0).rgb; 
			
			float originalHue = atan(yColor.b, yColor.g);
			float finalHue = originalHue + hue;
			
			float chroma = sqrt(yColor.b*yColor.b+yColor.g*yColor.g);
			
			vec3 yFinalColor = vec3(yColor.r, chroma * cos(finalHue), chroma * sin(finalHue));
			gl_FragColor = vec4(yiq2rgb*yFinalColor, 1.0);
		}
]]>			
		</program>
	</language>
</jittershader>